; Listing generated by Microsoft (R) Optimizing Compiler Version 19.33.31630.0 

	TITLE	D:\_УЧЁБА_\Лабораторные работы\КПО\SE_Lab17\SE_asm01d\Debug\SE_asm01d.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__62682FE6_SE_asm01d@cpp DB 01H
msvcjmc	ENDS
PUBLIC	_getmin
PUBLIC	_getmax
PUBLIC	__JustMyCode_Default
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getmax
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_ret$ = -8						; size = 4
_array$ = 8						; size = 4
_length$ = 12						; size = 4
_getmax	PROC						; COMDAT
; File D:\_УЧЁБА_\Лабораторные работы\КПО\SE_Lab17\SE_asm01d\SE_asm01d.cpp
; Line 16
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d e8	 lea	 edi, DWORD PTR [ebp-24]
  0000f	b9 06 00 00 00	 mov	 ecx, 6
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __62682FE6_SE_asm01d@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
; Line 17
  00025	b8 04 00 00 00	 mov	 eax, 4
  0002a	6b c8 00	 imul	 ecx, eax, 0
  0002d	8b 55 08	 mov	 edx, DWORD PTR _array$[ebp]
  00030	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  00033	89 45 f8	 mov	 DWORD PTR _ret$[ebp], eax
; Line 18
  00036	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 1
  0003d	eb 09		 jmp	 SHORT $LN4@getmax
$LN2@getmax:
  0003f	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00042	83 c0 01	 add	 eax, 1
  00045	89 45 ec	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@getmax:
  00048	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  0004b	3b 45 0c	 cmp	 eax, DWORD PTR _length$[ebp]
  0004e	7d 1c		 jge	 SHORT $LN3@getmax
; Line 20
  00050	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _array$[ebp]
  00056	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00059	3b 55 f8	 cmp	 edx, DWORD PTR _ret$[ebp]
  0005c	7e 0c		 jle	 SHORT $LN5@getmax
; Line 22
  0005e	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00061	8b 4d 08	 mov	 ecx, DWORD PTR _array$[ebp]
  00064	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00067	89 55 f8	 mov	 DWORD PTR _ret$[ebp], edx
$LN5@getmax:
; Line 24
  0006a	eb d3		 jmp	 SHORT $LN2@getmax
$LN3@getmax:
; Line 25
  0006c	8b 45 f8	 mov	 eax, DWORD PTR _ret$[ebp]
; Line 26
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
_getmax	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getmin
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_ret$ = -8						; size = 4
_array$ = 8						; size = 4
_length$ = 12						; size = 4
_getmin	PROC						; COMDAT
; File D:\_УЧЁБА_\Лабораторные работы\КПО\SE_Lab17\SE_asm01d\SE_asm01d.cpp
; Line 4
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d e8	 lea	 edi, DWORD PTR [ebp-24]
  0000f	b9 06 00 00 00	 mov	 ecx, 6
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __62682FE6_SE_asm01d@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
; Line 5
  00025	b8 04 00 00 00	 mov	 eax, 4
  0002a	6b c8 00	 imul	 ecx, eax, 0
  0002d	8b 55 08	 mov	 edx, DWORD PTR _array$[ebp]
  00030	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  00033	89 45 f8	 mov	 DWORD PTR _ret$[ebp], eax
; Line 6
  00036	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 1
  0003d	eb 09		 jmp	 SHORT $LN4@getmin
$LN2@getmin:
  0003f	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00042	83 c0 01	 add	 eax, 1
  00045	89 45 ec	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@getmin:
  00048	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  0004b	3b 45 0c	 cmp	 eax, DWORD PTR _length$[ebp]
  0004e	7d 1c		 jge	 SHORT $LN3@getmin
; Line 8
  00050	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _array$[ebp]
  00056	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00059	3b 55 f8	 cmp	 edx, DWORD PTR _ret$[ebp]
  0005c	7d 0c		 jge	 SHORT $LN5@getmin
; Line 10
  0005e	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00061	8b 4d 08	 mov	 ecx, DWORD PTR _array$[ebp]
  00064	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00067	89 55 f8	 mov	 DWORD PTR _ret$[ebp], edx
$LN5@getmin:
; Line 12
  0006a	eb d3		 jmp	 SHORT $LN2@getmin
$LN3@getmin:
; Line 13
  0006c	8b 45 f8	 mov	 eax, DWORD PTR _ret$[ebp]
; Line 14
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
_getmin	ENDP
_TEXT	ENDS
END
